SELECT  *
FROM sqlproject1-379100.CovidVax.CovidDeaths 
WHERE continent is not null

-- Select the data that we will be using
SELECT  Location, date, total_cases, new_cases, total_deaths, population
FROM sqlproject1-379100.CovidVax.CovidDeaths 
WHERE continent is not null


-- Looking at Total Cases vs Total Deaths
-- Shows the likelihood of dying if you contract covid in your country
SELECT  Location, date, total_cases, total_deaths, (Total_deaths/total_cases)*100 as DeathPercentage
FROM sqlproject1-379100.CovidVax.CovidDeaths 
WHERE location = 'United States' and continent is not null

-- Looking at Total Cases vs Population
-- Shows what percentage of population got Covid

SELECT  Location, date, Population, total_cases, (total_cases/population)*100 as PercentPopulationInfected
FROM sqlproject1-379100.CovidVax.CovidDeaths 
WHERE location = 'United States' and continent is not null
Order By DeathPercentage DESC

-- Looking at Countries with the highest infection rate compared to population

SELECT  Location, Population, MAX(total_cases) as HighestInfectionCount, MAX((total_cases/population))*100 as PercentPopulationInfected
FROM sqlproject1-379100.CovidVax.CovidDeaths 
--WHERE location = 'United States'
GROUP BY Location, Population
ORDER BY PercentPopulationInfected DESC

-- Showing the countries with the highest death count per population

SELECT  Location, MAX(cast(total_deaths as int)) as TotalDeathCount
FROM sqlproject1-379100.CovidVax.CovidDeaths 
--WHERE location = 'United States'
WHERE continent is not null
GROUP BY Location
ORDER BY TotalDeathCount DESC


--Break things down by CONTINENT

SELECT continent, MAX(cast(total_deaths as int)) as TotalDeathCount
FROM sqlproject1-379100.CovidVax.CovidDeaths 
--WHERE location = 'United States'
WHERE continent is not null
GROUP BY continent
ORDER BY TotalDeathCount DESC


-- This data has accurate counts since it includes things with NULL countries
-- Showing continents with the highest death count per population

SELECT location, MAX(cast(total_deaths as int)) as TotalDeathCount
FROM sqlproject1-379100.CovidVax.CovidDeaths 
--WHERE location = 'United States'
WHERE continent is null
GROUP BY location
ORDER BY TotalDeathCount DESC


-- GLOBAL NUMBERS

SELECT date, SUM(new_cases) as TotalCases, SUM(new_deaths) as TotalDeaths, SUM(new_deaths)/SUM(new_cases)*100 as DeathPercentage
FROM sqlproject1-379100.CovidVax.CovidDeaths 
--WHERE location = 'United States' 
WHERE continent is not null
GROUP BY date
ORDER BY date

-- Total Global cases, deaths, and death percentage

SELECT SUM(new_cases) as TotalCases, SUM(new_deaths) as TotalDeaths, SUM(new_deaths)/SUM(new_cases)*100 as DeathPercentage
FROM sqlproject1-379100.CovidVax.CovidDeaths 
--WHERE location = 'United States' 
WHERE continent is not null


-- Looking at Total Population vs Population Vaccinated


SELECT death.continent, death.location, death.date, death.population, vax.new_vaccinations, SUM(vax.new_vaccinations) OVER (PARTITION BY death.location Order by death.location, death.date) as NumPeopleVax
-- cant work --NumPeopleVax/population * 100
FROM sqlproject1-379100.CovidVax.CovidDeaths death
INNER JOIN sqlproject1-379100.CovidVax.CovidVaccinations vax
  on death.location = vax.location
  and death.date = vax.date
WHERE death.continent is not null 
ORDER BY 2, 3


-- USE CTE

WITH
PopvsVac --[(Continent, Location, Date, Population, new_vaccinations, NumPeopleVax)]
AS
(
SELECT death.continent, death.location, death.date, death.population, vax.new_vaccinations, 
SUM(vax.new_vaccinations) OVER (PARTITION BY death.location ORDER BY death.location, death.date) as NumPeopleVax
FROM sqlproject1-379100.CovidVax.CovidDeaths death
INNER JOIN sqlproject1-379100.CovidVax.CovidVaccinations vax
  on death.location = vax.location
  and death.date = vax.date
WHERE death.continent is not null 
)
SELECT *, (NumPeopleVax/population) * 100 as percentVac
FROM PopvsVac


-- Temp Table

DROP TABLE IF EXISTS sqlproject1-379100.CovidVax.PercentPopulationVaccinated;
CREATE TABLE sqlproject1-379100.CovidVax.PercentPopulationVaccinated
(
  Continent string,
  Location string,
  Date datetime,
  Population int64,
  new_vaccinations int64,
  NumPeopleVax int64
);

INSERT INTO sqlproject1-379100.CovidVax.PercentPopulationVaccinated
SELECT death.continent, death.location, death.date, death.population, vax.new_vaccinations, 
SUM(vax.new_vaccinations) OVER (PARTITION BY death.location Order by death.location, death.date) as NumPeopleVax
FROM sqlproject1-379100.CovidVax.CovidDeaths death
INNER JOIN sqlproject1-379100.CovidVax.CovidVaccinations vax
  on death.location = vax.location
  and death.date = vax.date
WHERE death.continent is not null;

SELECT *, (NumPeopleVax/population) * 100 as percentVac
FROM sqlproject1-379100.CovidVax.PercentPopulationVaccinated;


-- Creating view to store data for later visualizations
CREATE VIEW sqlproject1-379100.CovidVax.VPercentPopulationVaccinated AS
SELECT death.continent, death.location, death.date, death.population, vax.new_vaccinations, 
SUM(vax.new_vaccinations) OVER (PARTITION BY death.location Order by death.location, death.date) as NumPeopleVax
FROM sqlproject1-379100.CovidVax.CovidDeaths death
INNER JOIN sqlproject1-379100.CovidVax.CovidVaccinations vax
  on death.location = vax.location
  and death.date = vax.date
WHERE death.continent is not null
ORDER BY 2, 3

SELECT * 
FROM sqlproject1-379100.CovidVax.VPercentPopulationVaccinated



